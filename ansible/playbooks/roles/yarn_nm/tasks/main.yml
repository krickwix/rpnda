---
- include_vars: group_vars/hadoop

- name: Check hadoop installation
  stat: path=/opt/{{ hadoop_file_base }}
  register: hadoop_install_rules

- name: Check hadoop namenode created
  stat: path={{ hdfs_tmp_dir }}/dfs/name/current
  register: hdfs_namenode_dir

- name: Download hadoop archive
  get_url:
    url: "{{ hadoop_url }}"
    dest: "/tmp/{{ hadoop_file_base }}.tar.gz"
  when: hadoop_install_rules.stat.exists == false

- name: Unarchive hadoop
  unarchive:
    src: "/tmp/{{ hadoop_file_base }}.tar.gz"
    dest: /opt
    remote_src: True
  when: hadoop_install_rules.stat.exists == false

- name: Configure yarn nm
  template: src=templates/yarn-site.xml.j2 dest=/opt/{{ hadoop_file_base }}/etc/hadoop/yarn-site.xml

- name: Create yarn nodemanager unit file
  template: src=templates/yarn_nm.service.j2 dest=/lib/systemd/system/yarn_nm.service
  when: ansible_service_mgr == 'systemd'
  notify:
    - Reload systemctl
    - Restart yarn_nm service

- name: Restart yarn_nm service
  service: name=yarn_nm state=restarted
